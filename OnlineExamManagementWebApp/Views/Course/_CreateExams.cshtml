@model OnlineExamManagementWebApp.ViewModels.CreateExamViewModel

<br />
<link href="~/Content/css/select2.css" rel="stylesheet" />

@{
    var examTypes = new List<SelectListItem> {

new SelectListItem {
Value = "1",
Text = @"Class Test"
},
new SelectListItem {
Value = "2",
Text = @"Lab Test"
}
};
}


<div class="panel-group">
    <div class="panel panel-success">
        <div class="panel-heading">
            <div class="panel-title">Exam Entry</div>
        </div>

        <div class="panel-body">

            @using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "form-horizontal", id = "form-createExam" })) {

                HtmlHelper.UnobtrusiveJavaScriptEnabled = false;

                <div class="form-group">
                    @Html.LabelFor(m=>m.OrganizationName, new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-10">
                        @Html.TextBoxFor(m => m.OrganizationName, new { @class = "form-control", id = "js-organization", @readonly = "true" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m=>m.Course, new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-10">
                        @Html.TextBoxFor(m => m.Course.Code, new { @class = "form-control", id = "js-course-code", @readonly = "true" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Exam Type", new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-10">
                        @Html.DropDownList("js-examTypes", examTypes, "--Select Type--", new { @class = "form-control" })
                        @Html.ValidationMessage("js-examTypes", "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.Code, new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-10">
                        @Html.TextBoxFor(m => m.Code, new { @class = "form-control", placeholder = "Exam Code", id = "js-exam-code" })
                        @Html.ValidationMessageFor(m => m.Code, "", new { @class = "text-danger " })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.Topic, new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-10">
                        @Html.TextBoxFor(m => m.Topic, new { @class = "form-control", placeholder = "Exam Topic", id = "js-exam-topic" })
                        @Html.ValidationMessageFor(m => m.Topic, "", new { @class = "text-danger " })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.FullMarks, new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-10">
                        @Html.TextBoxFor(m => m.FullMarks, new { @class = "form-control", placeholder = "Full Marks", id = "js-exam-full-marks" })
                        @Html.ValidationMessageFor(m => m.FullMarks, "", new { @class = "text-danger " })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.Duration, new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-2">
                        @Html.TextBoxFor(m => m.DurationHour, null, new { @class = "form-control", placeholder = "hh", id = "js-exam-duration-hour" })
                        @Html.ValidationMessageFor(m => m.DurationHour, "", new { @class = "text-danger " })
                    </div>
                    <div class="col-sm-2">
                        @Html.TextBoxFor(m => m.DurationMin, new { @class = "form-control", placeholder = "mm", id = "js-exam-duration-min" })
                        @Html.ValidationMessageFor(m => m.DurationMin, "", new { @class = "text-danger " })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.SerialNo, new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-10">
                        @Html.TextBoxFor(m => m.SerialNo, new { @class = "form-control", id = "js-exam-serial" })
                        @Html.ValidationMessageFor(m => m.SerialNo, "", new { @class = "text-danger " })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-sm-10">
                        <input type="button" class="btn btn-success" id="js-btn-addExam" value="Add">
                    </div>
                </div>
            }
        </div>
    </div>
</div>


<div class="panel-group">
    <div class="panel panel-success">
        <div class="panel-heading">
            <div class="panel-title">Exam Table</div>
        </div>

        <div class="panel-body">
            <table class="table table-bordered table-hover table-responsive">
                <tr>
                    <th>SL No.</th>
                    <th>Type</th>
                    <th>Topic</th>
                    <th>Code</th>
                    <th>Duration</th>
                    <th>Full Marks</th>
                    <th>Action</th>
                </tr>
                <tbody id="create-exam-tableBody">
                    @if (Model.Course.Exams != null) {
                        foreach (var exam in Model.Course.Exams) {
                            <tr>
                                <td>
                                    <input type="hidden" name="CourseId" value="@exam.CourseId" />
                                    @exam.SerialNo
                                </td>
                                <td>@exam.Type</td>
                                <td>@exam.Topic</td>
                                <td>@exam.Code</td>
                                <td>
                                    <input type="hidden" name="Duration" value="@exam.Duration" />
                                    @(exam.Duration / 60) hh : @(exam.Duration % 60) mm
                                </td>
                                <td>@exam.FullMarks</td>
                                <td>
                                    <a href='#' class='js-createExam-ViewExamLink'>View | </a>
                                    <a href='#' class='js-createExam-EditExamLink'>Edit | </a>
                                    <a href='#' class='js-createExam-RemoveExamLink'>Remove</a>
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>

            <div class="form-group">
                <div class="pull-left">
                    <input type="button" class="btn btn-primary" id="js-btn-SaveAllExam" value="Save">
                </div>
            </div>
        </div>
    </div>
</div>