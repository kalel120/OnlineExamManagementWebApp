@model OnlineExamManagementWebApp.ViewModels.CreateExamViewModel

<br />
<link href="~/Content/css/select2.css" rel="stylesheet" />

@{
    List<SelectListItem> examTypes = new List<SelectListItem> {
        new SelectListItem {
            Value = "0",
            Text = @"--Select Exam Type--"
        },
        new SelectListItem {
            Value = "1",
            Text = @"Class Test"
        },
        new SelectListItem {
            Value = "1",
            Text = @"Lab Test"
        }
    };
}
<div class="form-horizontal">    
    <div class="form-group">
        @Html.Label("Organization", new {@class = "col-sm-2 control-label"})
        <div class="col-sm-10">
            @Html.TextBoxFor(m=>m.OrganizationName, null, new {@class = "form-control", id= "js-organization", @readonly="true" })
        </div>
    </div>
    <div class="form-group">
        @Html.Label("Course", new {@class = "col-sm-2 control-label"})
        <div class="col-sm-10">
            @Html.TextBoxFor(m=>m.Course.Code, null, new {@class = "form-control",id= "js-course-code", @readonly = "true" })
        </div>
    </div>
    <div class="form-group">
        @Html.Label("Exam Types", new {@class = "col-sm-2 control-label"})
        <div class="col-sm-10">
            @Html.DropDownList("js-examTypes", examTypes, new {@class = "form-control", style = "width: 280px"})
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Code", new {@class = "col-sm-2 control-label"})
        <div class="col-sm-10">
            @Html.TextBoxFor(m=>m.Code, null, new {@class = "form-control", placeholder = "Exam Code",id= "js-exam-code" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Topic", new {@class = "col-sm-2 control-label"})
        <div class="col-sm-10">
            @Html.TextBoxFor(m=>m.Topic, null, new {@class = "form-control", placeholder = "Exam Topic",id= "exam-topic" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Full Marks", new {@class = "col-sm-2 control-label"})
        <div class="col-sm-10">
            @Html.TextBoxFor(m=>m.FullMarks, null, new {@class = "form-control", placeholder = "Exam Topic",id= "exam-full-marks" })
        </div>
    </div>

    <div class="form-inline">
        @Html.Label("Duration", new {@class = "col-sm-2 control-label"})
        <div class="input-group">
            @Html.TextBoxFor(m=>m.DurationHour, null, new {@class = "form-control", placeholder = "hh",id= "exam-duration-hour" })
            <span class="input-group-addon">:</span>
            @Html.TextBoxFor(m=>m.DurationMin, null, new {@class = "form-control", placeholder = "mm",id= "exam-duration-min" })
        </div>
    </div>
    <br/>
    <div class="form-group">
        @Html.Label("Serial", new {@class = "col-sm-2 control-label"})
        <div class="col-sm-10">
            @Html.TextBoxFor(m=>m.Serial, null, new {@class = "form-control",id= "exam-serial", @readonly = "true" })
        </div>
    </div>


    <div class="form-group">
        <div class="col-sm-10">
            <input type="button" class="btn btn-default" id="js-btn-addExam" value="Add">
        </div>
    </div>
</div>

<table class="table table-bordered table-hover table-responsive">
    <tr>
        <th>Type</th>
        <th>Topic</th>
        <th>Code</th>
        <th>Duration</th>
        <th>Full Marks</th>
        <th>Action</th>
    </tr>
    <tbody class="table-body">

    @foreach (var exam in Model.Course.Exams) {
        <tr>
            <td>@exam.Type</td>
            <td>@exam.Topic</td>
            <td>@exam.Code</td>
            <td>@exam.Duration</td>
            <td>@exam.FullMarks</td>
            <td>
                <a href="#">View | </a>
                <a href="#">Edit | </a>
                <a href="#">Remove</a>
            </td>
        </tr>
    }
    </tbody>
</table>


<div class="form-group">
    <div class="col-sm-10">
        <input type="button" class="btn btn-primary" id="js-btn-addExam" value="Save">
    </div>
</div>