@model OnlineExamManagementWebApp.ViewModels.OrgEntryViewModel

@{
    ViewBag.Title = "Entry";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/Scripts/dropzone/basic.css" rel="stylesheet" />
<link href="~/Scripts/dropzone/dropzone.css" rel="stylesheet" />

<div class="x_panel">
    <div class="x_title">
        <h2>Entry<small>Create New Organization</small></h2>
        <ul class="nav navbar-right panel_toolbox">
            <li>
                <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
            </li>
            <li class="dropdown">
                <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false"><i class="fa fa-wrench"></i></a>
                <ul class="dropdown-menu" role="menu">
                    <li>
                        <a href="#">Settings 1</a>
                    </li>
                    <li>
                        <a href="#">Settings 2</a>
                    </li>
                </ul>
            </li>
            <li>
                <a class="close-link"><i class="fa fa-close"></i></a>
            </li>
        </ul>
        <div class="clearfix"></div>
    </div>

    <div class="x_content">
        @using (Html.BeginForm("Entry", "Organization", FormMethod.Post, new { id = "js_dropZoneForm", enctype = "multipart/form-data" })) {
            @Html.AntiForgeryToken()
            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="item form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                    <div class="col-md-6 col-sm-6 col-xs-12">
                        @Html.TextBoxFor(model => model.Name, new { @class = "form-control col-md-7 col-xs-12", placeholder= "Should Not Exceed 50 Characters" })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="item form-group">
                    @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                    <div class="col-md-6 col-sm-6 col-xs-12">
                        @Html.TextBoxFor(model => model.Code, new { @class = "form-control col-md-7 col-xs-12", placeholder = "Should Not Exceed 20 Characters" })
                        @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="item form-group">
                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                    <div class="col-md-6 col-sm-6 col-xs-12">
                        @Html.TextBoxFor(model => model.Address, new { @class = "form-control col-md-7 col-xs-12", placeholder = "Should Not Exceed 100 Characters" })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="item form-group">
                    @Html.LabelFor(model => model.Contact, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                    <div class="col-md-6 col-sm-6 col-xs-12">
                        @Html.TextBoxFor(model => model.Contact, new { @class = "form-control col-md-7 col-xs-12", placeholder = "Should Not Exceed 100 Characters" })
                        @Html.ValidationMessageFor(model => model.Contact, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="item form-group">
                    @Html.LabelFor(model => model.About, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                    <div class="col-md-6 col-sm-6 col-xs-12">
                        @Html.TextBoxFor(model => model.About, new { @class = "form-control col-md-7 col-xs-12" })
                        @Html.ValidationMessageFor(model => model.About, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="item form-group">
                    @Html.LabelFor(model => model.Logo, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                    <div class="col-md-6 col-sm-6 col-xs-12">
                        <input type="file" name="Logo" />
                    </div>
                </div>

                <div class="ln_solid"></div>
                <div class="form-group">
                    <div class="col-md-6 col-md-offset-3">
                        <input type="submit" value="Create" class="btn btn-success" />
                    </div>
                </div>
            </div>
        }

        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>
    </div>
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript" src="~/Scripts/dropzone/dropzone.js"></script>
    <script type="text/javascript" src="~/Scripts/CustomScripts/organization/org-entry.js"></script>
}
